services:
  # Message broker for Rocket.Chat
  nats:
    image: ${NATS_IMAGE}
    restart: always
    command: --http_port 8222
    expose:
      - "4222"
      - "8222"

  # Rocket.Chat application
  rocketchat:
    image: ${ROCKETCHAT_IMAGE}
    restart: always
    depends_on:
      - mongo
      - nats
    environment:
      MONGO_URL: mongodb://mongo:${MONGODB_PORT_NUMBER}/rocketchat?replicaSet=${MONGODB_REPLICA_SET_NAME}
      ROOT_URL: ${ROOT_URL}
      PORT: ${HOST_PORT}
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: compose
      REG_TOKEN: ${REG_TOKEN}
      LICENSE_DEBUG: "true"
      OVERWRITE_SETTING_Prometheus_Enabled: "true"
      OVERWRITE_SETTING_Prometheus_Port: "${METRICS_PORT}"
      TRANSPORTER: ${NATS_URL}
      INSTANCE_IP: ""
    ports:
      - "${BIND_IP}:${HOST_PORT}:${HOST_PORT}"
      - "${BIND_IP}:${METRICS_PORT}:${METRICS_PORT}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.rocketchat.entrypoints=http,https"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=${HOST_PORT}"
