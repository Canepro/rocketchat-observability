# Production overlay: Production-ready configuration with security and scalability
# 
# BEFORE USING THIS OVERLAY:
# 1. Set up a domain name and point it to your server
# 2. Configure your .env file with production values:
#    - DOMAIN=your-domain.com
#    - ROOT_URL=https://your-domain.com
#    - TRAEFIK_PROTOCOL=https
#    - LETSENCRYPT_ENABLED=true
#    - LETSENCRYPT_EMAIL=your-email@domain.com
#    - GRAFANA_ADMIN_PASSWORD=strong-password-here
#    - MONGODB_ENABLE_AUTHENTICATION=true
#    - MONGODB_ROOT_PASSWORD=strong-mongo-password
# 3. Ensure your server has ports 80 and 443 open
# 4. Consider setting up a firewall (ufw/iptables)
# 5. Set up regular backups
# 6. Monitor system resources
#
# SECURITY CONSIDERATIONS:
# - Change all default passwords
# - Use strong, unique passwords for each service
# - Enable MongoDB authentication
# - Configure proper firewall rules
# - Set up SSL/TLS certificates
# - Regular security updates
# - Monitor logs for suspicious activity
#
# SCALABILITY CONSIDERATIONS:
# - Use external MongoDB for production workloads
# - Consider Redis for session storage
# - Set up proper monitoring and alerting
# - Configure log aggregation
# - Plan for backup and disaster recovery

services:
  traefik:
    ports:
      - "${TRAEFIK_HTTP_BIND_HOST:-0.0.0.0}:${TRAEFIK_HTTP_PORT:-80}:80"
      - "${TRAEFIK_HTTPS_BIND_HOST:-0.0.0.0}:${TRAEFIK_HTTPS_PORT:-443}:443"
      - "${TRAEFIK_DASHBOARD_PORT:-8080}:8080"
    environment:
      # Production security settings
      - TRAEFIK_API_INSECURE=false
      - TRAEFIK_PROTOCOL=${TRAEFIK_PROTOCOL:-https}
      # Enable Let's Encrypt for SSL certificates
      - LETSENCRYPT_ENABLED=${LETSENCRYPT_ENABLED:-true}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-}
    labels:
      # Traefik dashboard with basic auth (configure in .env)
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_USER:-admin}:${TRAEFIK_DASHBOARD_PASSWORD_HASH:-}"

  mongo:
    environment:
      # Production MongoDB settings
      - MONGODB_ENABLE_AUTHENTICATION=${MONGODB_ENABLE_AUTHENTICATION:-true}
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-}
      - MONGODB_REPLICA_SET_NAME=${MONGODB_REPLICA_SET_NAME:-rs0}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY:-}
      - MONGODB_ENABLE_DIRECTORY_PER_DB=true
      - MONGODB_DISABLE_SYMLINKS=true
    command: >
      --replSet ${MONGODB_REPLICA_SET_NAME:-rs0}
      --bind_ip_all
      --port 27017
      --auth
    volumes:
      # Persistent MongoDB data
      - mongo_data:/bitnami/mongodb
    restart: unless-stopped

  rocketchat:
    environment:
      # Production Rocket.Chat settings
      - ROOT_URL=${ROOT_URL:-https://localhost:3000}
      - MONGO_URL=mongodb://${MONGODB_ROOT_USER:-root}:${MONGODB_ROOT_PASSWORD:-}@mongo:27017/rocketchat?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}&authSource=admin
      - MONGO_OPLOG_URL=mongodb://${MONGODB_ROOT_USER:-root}:${MONGODB_ROOT_PASSWORD:-}@mongo:27017/local?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}&authSource=admin
      - REG_TOKEN=${REG_TOKEN:-}
      - NATS_URL=nats://nats:4222
      - PROMETHEUS_ENABLED=true
      - PROMETHEUS_PORT=9458
      # Production performance settings
      - NODE_ENV=production
      - INSTANCE_IP=0.0.0.0
    restart: unless-stopped
    depends_on:
      - mongo
      - nats

  prometheus:
    environment:
      - PROMETHEUS_LISTEN_ADDR=0.0.0.0
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      # Persistent Prometheus data
      - prometheus_data:/prometheus
    restart: unless-stopped
    command: >
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --storage.tsdb.retention.size=${PROMETHEUS_RETENTION_SIZE:-15GB}
      --storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME:-15d}
      --web.listen-address=0.0.0.0:9090

  grafana:
    environment:
      # Production Grafana settings
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-}
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-}
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-}
      - GF_SERVER_SERVE_FROM_SUB_PATH=${GRAFANA_SERVE_FROM_SUB_PATH:-false}
      # Disable anonymous access for production
      - GF_AUTH_ANONYMOUS_ENABLED=false
    ports:
      - "${GRAFANA_HOST_PORT:-5050}:3000"
    volumes:
      # Persistent Grafana data
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  nats:
    command: >
      --jetstream
      --http_port 8222
      --port 4222
      --max_payload 1048576
    restart: unless-stopped

volumes:
  mongo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local