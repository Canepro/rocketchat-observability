###############################################
# Rocket.Chat Observability - .env template   #
# Copy to .env and adjust as needed           #
###############################################

# IMPORTANT: ALL variables below MUST have values assigned!
# Empty variables will cause "invalid reference format" errors
# during Docker Compose operations.

###############################################
# Images (use fully qualified names)
###############################################
# NOTE: Always use fully qualified image names (registry.domain/image:tag)
# to prevent "invalid reference format" errors
# Rocket.Chat app
ROCKETCHAT_IMAGE=docker.io/rocketchat/rocket.chat:6.5.4
# MongoDB (Bitnami - supports the env vars used below)
MONGO_IMAGE=docker.io/bitnami/mongodb:7.0
# MongoDB Exporter (for Prometheus)
MONGODB_EXPORTER_IMAGE=docker.io/bitnami/mongodb-exporter:0.40.0
# NATS (message broker / transporter)
NATS_IMAGE=docker.io/nats:2.10-alpine
# Traefik (reverse proxy)
TRAEFIK_IMAGE=docker.io/traefik:v3.1

###############################################
# Networking & Ports
###############################################
# Bind IP for published ports
BIND_IP=0.0.0.0
# Rocket.Chat app port (container and service target)
HOST_PORT=3000
# Rocket.Chat metrics port (Prometheus target)
METRICS_PORT=9458

# MongoDB port
MONGODB_PORT_NUMBER=27017

# Traefik entrypoint ports (host)
TRAEFIK_HTTP_PORT=80
TRAEFIK_HTTPS_PORT=443
# Traefik dashboard (host port)
TRAEFIK_DASHBOARD_PORT=8080

# Prometheus listen address and host port mapping
PROMETHEUS_LISTEN_ADDR=127.0.0.1
PROMETHEUS_PORT=9000

# Grafana host port (maps to container 3000)
GRAFANA_HOST_PORT=5050

###############################################
# Domains & URLs
###############################################
# Public domain for Rocket.Chat (used by Traefik router rule)
DOMAIN=localhost
# Root URL Rocket.Chat uses internally
ROOT_URL=http://localhost:3000

# Grafana can be accessed either by domain or subpath
# Path mode (recommended for most deployments): /grafana
GRAFANA_DOMAIN=
GRAFANA_PATH=/grafana
# Domain mode (advanced): Uncomment next line and comment GRAFANA_PATH
# GRAFANA_DOMAIN=grafana.localhost

###############################################
# Rocket.Chat settings
###############################################
# Registration token (optional). Leave empty if not needed.
REG_TOKEN=
# Transporter (NATS) URL used by Rocket.Chat
NATS_URL=nats://nats:4222

###############################################
# MongoDB replica set
###############################################
# NOTE: For local development, minimal configuration is recommended
# to avoid authentication and keyfile complexity issues
MONGODB_REPLICA_SET_NAME=rs0
# Key used by MongoDB replica set members (keep secret for non-local)
# For local development, consider using simplified configuration in compose.database.yml
MONGODB_REPLICA_SET_KEY=replicaSetKey123

###############################################
# Prometheus & Grafana
###############################################
# Keep defaults from compose files unless you need to change them
PROMETHEUS_VERSION=v3.4.2
PROMETHEUS_RETENTION_SIZE=15GB
PROMETHEUS_RETENTION_TIME=15d
NODE_EXPORTER_VERSION=v1.9.1
GRAFANA_VERSION=12.0.2
# Grafana admin password
GRAFANA_ADMIN_PASSWORD=rc-admin

###############################################
# Traefik settings
###############################################
# http or https (selects files/traefik/{http|https}/dynamic.yml)
TRAEFIK_PROTOCOL=http
# Expose Traefik dashboard without auth (local only)
TRAEFIK_API_INSECURE=true

# Let's Encrypt (use only with real domains and https)
LETSENCRYPT_ENABLED=false
LETSENCRYPT_EMAIL=you@example.com

###############################################
# Misc
###############################################
# Compose project name (uncomment to override default folder-based name)
# COMPOSE_PROJECT_NAME=rocketchat-observability

###############################################
# Troubleshooting Notes
###############################################
# If you encounter "invalid reference format" errors:
# 1. Ensure ALL variables above have values (no empty assignments)
# 2. Use fully qualified image names (registry.domain/image:tag)
# 3. Check TROUBLESHOOTING.md for detailed solutions
#
# If MongoDB fails to start:
# 1. Consider using simplified MongoDB configuration for local dev
# 2. See compose.database.yml comments for authentication options
# 3. Run: docker compose down -v && docker compose up -d
